#ifndef __Bus_HPP__
#define __Bus_HPP__

#include "main.h"
#include "stm32f1xx_hal.h"
#include "usart.h"
#include "tim.h"
#include <vector>
using namespace std ;

struct HeaderPacket 
{
	char firstByte ;
	char secondByte ;
	char thirdByte ;
	char packetID;
	char headerCounter ;
	int packetSize  ;	
	HeaderPacket ()  { }  
	HeaderPacket ( char _firstByte, char _secondByte, char _thirdByte, char _packetID, char _packetSize )
	{
		firstByte = _firstByte ;
		secondByte = _secondByte ;
		thirdByte = _thirdByte ;
	  packetID = _packetID ;
	  packetSize = _packetSize ;
	}
};
class BUS
{
	public:	
		BUS();
		BUS(int dastan, int dastan2,int s)
		{
			s= dastan + dastan2 ;
		}
		vector <char> main_buff;
		vector <char> driver_buff;
		vector <char> UI_buff;
	  void HipHop (void);	
	  void CheckHeader (struct HeaderPacket* HeaderPacket);
	  void Fillbuffer ( struct HeaderPacket* HeaderPacket);
	  void CheckEnd ( struct HeaderPacket* HeaderPacket ); 
	  void SendPacket (struct HeaderPacket* HeaderPacket , int driverAD,int DATA1, int DATA2, int DATA3,int DATA4, int DATA5,int DATA6,int DATA7,int DATA8 );
	  void SendPacket (struct HeaderPacket* HeaderPacket , int driverAD,int DATA1, int DATA2, int DATA3,int DATA4, int DATA5,int DATA6);
  	void VectorCheck (void);
	  void SendUart( uint8_t sendBuffer ) ;
	  void Delay_ms (int unsigned ms );
	  void TEST(void);
		void UIbuffer (void);
		void SendPkgPWM(void);
		void SendPkgCNT(void);
		void GetPacket(void);
		void UsartReceive(UART_HandleTypeDef *usartType,int dataLenght);
		void static BusInit(void);
};


#endif



